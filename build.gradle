/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id "java"
    id "java-library"
    id "com.github.johnrengelman.shadow" version "7.1.2" // Import utility to package libraries into .jar file.
}

group = "uk.hotten.herobrine"
version = "1.0-SNAPSHOT"

repositories {
    mavenLocal()
    mavenCentral()

    maven {
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'

        content {
            includeGroup 'org.bukkit'
            includeGroup 'org.spigotmc'
        }
    }

    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url = 'https://oss.sonatype.org/content/repositories/central' }
    maven { url = 'https://jitpack.io' }
    maven { url = "https://repo.dmulloy2.net/repository/public/" }

}

dependencies {
    api 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.12.1'
    api 'com.fasterxml.jackson.core:jackson-databind:2.12.1'
    api 'commons-io:commons-io:2.11.0'
    api 'org.apache.commons:commons-pool2:2.11.1'
    api 'mysql:mysql-connector-java:8.0.32'
    api 'redis.clients:jedis:3.4.1'
    api 'xyz.xenondevs:particle:1.8.3'
    api 'me.tigerhix.lib:scoreboard:1.0.1-SNAPSHOT'
    compileOnly 'org.spigotmc:spigot-api:1.18.2-R0.1-SNAPSHOT'
    compileOnly 'com.comphenix.protocol:ProtocolLib:4.7.0'
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    implementation 'uk.hotten.gxui:GxUI:1.2'
}

tasks.register('updatePluginYmlVersion') {
    doLast {
        def file = file('src/main/resources/plugin.yml')
        def lines = file.readLines()
        lines[2] = "version: ${version}-" + getCurrentGitBranch()
        file.write(lines.join("\n"))
    }
}

def revertPluginYmlVersion() {
    def file = file('src/main/resources/plugin.yml')
    def lines = file.readLines()
    lines[2] = "version: ${version}"
    file.write(lines.join("\n"))
}

def getCurrentGitBranch() {
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-parse', '--abbrev-ref', 'HEAD'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    } catch (ignored) {
        return 'unknown'
    }
}

shadowJar {
    minimize()
    archiveClassifier.set(getCurrentGitBranch())
    doLast {
        revertPluginYmlVersion()
    }
}

jar.dependsOn shadowJar

compileJava {
    options.compilerArgs += ["-parameters"]
    options.fork = true
    compileJava.options.encoding = 'UTF-8'
}

compileJava.dependsOn updatePluginYmlVersion